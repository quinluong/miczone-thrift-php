<?php
namespace Miczone\Thrift\Catalog;

/**
 * Autogenerated by Thrift Compiler (0.14.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

interface MiczoneCatalogStorageServiceIf
{
    /**
     * @return int
     */
    public function ping();
    /**
     * @param \Miczone\Thrift\Common\OperationHandle $operationHandle
     * @param \Miczone\Thrift\Catalog\Product\GetProductByIdRequest $request
     * @return \Miczone\Thrift\Catalog\Product\GetProductByIdResponse
     */
    public function getProductById(\Miczone\Thrift\Common\OperationHandle $operationHandle, \Miczone\Thrift\Catalog\Product\GetProductByIdRequest $request);
    /**
     * @param \Miczone\Thrift\Common\OperationHandle $operationHandle
     * @param \Miczone\Thrift\Catalog\Product\MultiGetProductByIdRequest $request
     * @return \Miczone\Thrift\Catalog\Product\MultiGetProductByIdResponse
     */
    public function multiGetProductById(\Miczone\Thrift\Common\OperationHandle $operationHandle, \Miczone\Thrift\Catalog\Product\MultiGetProductByIdRequest $request);
    /**
     * @param \Miczone\Thrift\Common\OperationHandle $operationHandle
     * @param \Miczone\Thrift\Catalog\Product\MultiGetSimpleProductByIdRequest $request
     * @return \Miczone\Thrift\Catalog\Product\MultiGetSimpleProductByIdResponse
     */
    public function multiGetSimpleProductById(\Miczone\Thrift\Common\OperationHandle $operationHandle, \Miczone\Thrift\Catalog\Product\MultiGetSimpleProductByIdRequest $request);
    /**
     * @param \Miczone\Thrift\Common\OperationHandle $operationHandle
     * @param \Miczone\Thrift\Catalog\Product\GetSliceProductRequest $request
     * @return \Miczone\Thrift\Catalog\Product\GetSliceProductResponse
     */
    public function getSliceProduct(\Miczone\Thrift\Common\OperationHandle $operationHandle, \Miczone\Thrift\Catalog\Product\GetSliceProductRequest $request);
    /**
     * @param \Miczone\Thrift\Common\OperationHandle $operationHandle
     * @param \Miczone\Thrift\Catalog\Product\MultiGetProductTranslatedNameByProductSkuAndOriginalMerchantRequest $request
     * @return \Miczone\Thrift\Catalog\Product\MultiGetProductTranslatedNameByProductSkuAndOriginalMerchantResponse
     */
    public function multiGetProductTranslatedNameByProductSkuAndOriginalMerchant(\Miczone\Thrift\Common\OperationHandle $operationHandle, \Miczone\Thrift\Catalog\Product\MultiGetProductTranslatedNameByProductSkuAndOriginalMerchantRequest $request);
    /**
     * @param \Miczone\Thrift\Common\OperationHandle $operationHandle
     * @param \Miczone\Thrift\Catalog\Product\GetProductIdByProductSkuAndOriginalMerchantRequest $request
     * @return \Miczone\Thrift\Catalog\Product\GetProductIdByProductSkuAndOriginalMerchantResponse
     */
    public function getProductIdByProductSkuAndOriginalMerchant(\Miczone\Thrift\Common\OperationHandle $operationHandle, \Miczone\Thrift\Catalog\Product\GetProductIdByProductSkuAndOriginalMerchantRequest $request);
    /**
     * @param \Miczone\Thrift\Common\OperationHandle $operationHandle
     * @param \Miczone\Thrift\Catalog\Category\GetCategoryByIdRequest $request
     * @return \Miczone\Thrift\Catalog\Category\GetCategoryByIdResponse
     */
    public function getCategoryById(\Miczone\Thrift\Common\OperationHandle $operationHandle, \Miczone\Thrift\Catalog\Category\GetCategoryByIdRequest $request);
    /**
     * @param \Miczone\Thrift\Common\OperationHandle $operationHandle
     * @param \Miczone\Thrift\Catalog\Category\MultiGetCategoryByIdRequest $request
     * @return \Miczone\Thrift\Catalog\Category\MultiGetCategoryByIdResponse
     */
    public function multiGetCategoryById(\Miczone\Thrift\Common\OperationHandle $operationHandle, \Miczone\Thrift\Catalog\Category\MultiGetCategoryByIdRequest $request);
    /**
     * @param \Miczone\Thrift\Common\OperationHandle $operationHandle
     * @param \Miczone\Thrift\Catalog\Category\GetCategoryBySlugRequest $request
     * @return \Miczone\Thrift\Catalog\Category\GetCategoryBySlugResponse
     */
    public function getCategoryBySlug(\Miczone\Thrift\Common\OperationHandle $operationHandle, \Miczone\Thrift\Catalog\Category\GetCategoryBySlugRequest $request);
    /**
     * @param \Miczone\Thrift\Common\OperationHandle $operationHandle
     * @param \Miczone\Thrift\Catalog\Category\MultiGetCategoryBySlugRequest $request
     * @return \Miczone\Thrift\Catalog\Category\MultiGetCategoryBySlugResponse
     */
    public function multiGetCategoryBySlug(\Miczone\Thrift\Common\OperationHandle $operationHandle, \Miczone\Thrift\Catalog\Category\MultiGetCategoryBySlugRequest $request);
    /**
     * @param \Miczone\Thrift\Common\OperationHandle $operationHandle
     * @param \Miczone\Thrift\Catalog\Category\GetCategoryByOriginalCategoryRequest $request
     * @return \Miczone\Thrift\Catalog\Category\GetCategoryByOriginalCategoryResponse
     */
    public function getCategoryByOriginalCategory(\Miczone\Thrift\Common\OperationHandle $operationHandle, \Miczone\Thrift\Catalog\Category\GetCategoryByOriginalCategoryRequest $request);
    /**
     * @param \Miczone\Thrift\Common\OperationHandle $operationHandle
     * @param \Miczone\Thrift\Catalog\Category\GetCategoryByProductSkuAndOriginalMerchantRequest $request
     * @return \Miczone\Thrift\Catalog\Category\GetCategoryByProductSkuAndOriginalMerchantResponse
     */
    public function getCategoryByProductSkuAndOriginalMerchant(\Miczone\Thrift\Common\OperationHandle $operationHandle, \Miczone\Thrift\Catalog\Category\GetCategoryByProductSkuAndOriginalMerchantRequest $request);
    /**
     * @param \Miczone\Thrift\Common\OperationHandle $operationHandle
     * @param \Miczone\Thrift\Catalog\Category\GetCategoryMappingByIdRequest $request
     * @return \Miczone\Thrift\Catalog\Category\GetCategoryMappingByIdResponse
     */
    public function getCategoryMappingById(\Miczone\Thrift\Common\OperationHandle $operationHandle, \Miczone\Thrift\Catalog\Category\GetCategoryMappingByIdRequest $request);
    /**
     * @param \Miczone\Thrift\Common\OperationHandle $operationHandle
     * @param \Miczone\Thrift\Catalog\Category\GetSliceSimpleCategoryRequest $request
     * @return \Miczone\Thrift\Catalog\Category\GetSliceSimpleCategoryResponse
     */
    public function getSliceSimpleCategory(\Miczone\Thrift\Common\OperationHandle $operationHandle, \Miczone\Thrift\Catalog\Category\GetSliceSimpleCategoryRequest $request);
    /**
     * @param \Miczone\Thrift\Common\OperationHandle $operationHandle
     * @param \Miczone\Thrift\Catalog\Category\GetSliceCategoryRequest $request
     * @return \Miczone\Thrift\Catalog\Category\GetSliceCategoryResponse
     */
    public function getSliceCategory(\Miczone\Thrift\Common\OperationHandle $operationHandle, \Miczone\Thrift\Catalog\Category\GetSliceCategoryRequest $request);
    /**
     * @param \Miczone\Thrift\Common\OperationHandle $operationHandle
     * @param \Miczone\Thrift\Catalog\Source\GetSourceByIdRequest $request
     * @return \Miczone\Thrift\Catalog\Source\GetSourceByIdResponse
     */
    public function getSourceById(\Miczone\Thrift\Common\OperationHandle $operationHandle, \Miczone\Thrift\Catalog\Source\GetSourceByIdRequest $request);
    /**
     * @param \Miczone\Thrift\Common\OperationHandle $operationHandle
     * @param \Miczone\Thrift\Catalog\Breadcrumb\MultiGetBreadcrumbListByProductSkuAndOriginalMerchantRequest $request
     * @return \Miczone\Thrift\Catalog\Breadcrumb\MultiGetBreadcrumbListByProductSkuAndOriginalMerchantResponse
     */
    public function multiGetBreadcrumbListByProductSkuAndOriginalMerchant(\Miczone\Thrift\Common\OperationHandle $operationHandle, \Miczone\Thrift\Catalog\Breadcrumb\MultiGetBreadcrumbListByProductSkuAndOriginalMerchantRequest $request);
}
